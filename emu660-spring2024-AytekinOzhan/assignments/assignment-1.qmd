---
title: "Assignment 1"
---

My first assignment has four main parts. In part 1, a brief summary is given about the speech *"Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Baykal Hafızoğlu & Erdi Daşdemir"*. In parts 2 and 3, summary statistics for the whole mtcars data set and column based dataset are examined respectively. In part 4, again column based statistics are examined but apply function of R is used. Lastly in part 5, statistics based on NA values will be presented.

## 1. Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Baykal Hafızoğlu & Erdi Daşdemir

In the 21st century, the Operations Research (OR) concept changed considerably. When we mention OR, Machine Learning (ML) and Artificial Intelligence (AI) concepts appear right away so I will explain how the analytics world is classified and based on this classification, I will try to examine the roles of these methods.

Analytics world can be examined in 4 main classes: Descriptive Analytics, Diagnostic Analytics, Predictive Analytics and Prescriptive Analytics.

Descriptive Analytics is used to describe the attributes of the data (i.e. visualisation). Diagnostic Analytics is used to make inferences (i.e. hypothesis analysis) about the data and based on these inferences, we can try to recommend (prescribe) some solutions in Prescriptive Analytics (i.e. mathematical optimization). Lastly; we can predict the features based on the current data with Predictive Analytics (i.e. ML and AI). As we can see, we can gain so much information from raw data by using 4 main classes of Analytics methods. Generally, these methods work together to solve a problem. For example; when we look at a supply chain problem, descriptive, predictive and prescriptive methods work together and give us daily inventory level, demand forecast and safety stock optimization.

Now let us mention the process explained above. How these processes should be run and what are the difficulties etc. Any project, process, homework or master thesis should start a strictly descriptive problem definition. Without any definition, no problem or process can be run smoothly. When we look at the analytics world, we can start with various statistics (mean, standard deviation, quantiles etc.) and visualisation about the data (bar chart, histogram, box plot etc.). In this step, we can also use many data mining methods like classification, regression etc. After making the preparation for the further analysis, we can now try to optimise or predict the problem at hand. When these simple but beneficial paths are followed, any problem can be solved and more importantly can be explained to the end user. In this step, to transfer the model and the information to the end user, all the models and codes etc. should be deployed to the production so the user can run the model and get the information what (s)he needs. This process includes an interactive approach with the user. These model software models should be tested with the users regularly to optimise the model processes so users start to adapt the problem solution and the way how this solution works.

Another crucial topic in this process for the users and the developers is the explainability and interpretability. Many users tend to prefer simple solutions rather than complex and black box solutions like Neural Networks (NNs). Simple solutions with some visual results are way easier to grasp and explain so when we start a modelling problem we should keep this in our minds so we can optimise the optimisation process for ourselves.

As a result, the analytics world is filled with unique information and methods to learn. Enjoy while learning and writing your models and codes…

## 2. mtcars Data Statistical Analysis

```{r echo=FALSE, results='asis'}

input_data <- unlist(as.list(as.data.frame(mtcars)))

custom_summary <- function(input_data) {
  
      cat("<span style='color:red; font-weight:bold;'>Summary Statistics of Input Data: </span>", "\n",
      "<b>Mean:</b> ", mean(input_data), "\n",
    "<b>Median:</b> ", median(input_data), "\n",
    "<b>Standard Deviation:</b> ", sd(input_data), "\n",
    "<b>Min:</b> ", min(input_data), "\n",
    "<b>Max:</b> ", max(input_data), "\n",
    "<hr>", "\n", sep="\n")
}

custom_summary(input_data)
```

## 3. mtcars Data Columns Statistical Analysis

```{r results='asis', echo=FALSE}

library(knitr)

custom_summary <- function(input_data) {
  
  df <- data.frame(matrix(ncol = ncol(input_data), nrow = 5), row.names = c("mean", "median", "std", "min", "max"))
  colnames(df) <- colnames(input_data)

  for (col in colnames(mtcars)) {
    
    mean_ <- mean(mtcars[[col]])
    median_ <- median(mtcars[[col]])
    std_ <- sd(mtcars[[col]])
    min_ <- min(mtcars[[col]])
    max_ <- max(mtcars[[col]])
    
    df["mean", col] <- mean_
    df["median", col] <- median_
    df["std", col] <- std_
    df["min", col] <- min_
    df["max", col] <- max_
    
    #cat("<span style='color:red; font-weight:bold;'>Column: </span>", col, "\n",
    #"<b>Mean:</b> ", mean_, "\n",
    #"<b>Median:</b> ", median_, "\n",
    #"<b>Standard Deviation:</b> ", std_, "\n",
    #"<b>Min:</b> ", min_, "\n",
    #"<b>Max:</b> ", max_, "\n",
    #"<hr>", "\n", sep="\n")
  }
  
  return(df)
}

cat("<p>mtcars dataset statistics are examined by using for loops and the results are given on the following table. Columns are taken from the original dataset and rows are the statistics.</p>")

kable(custom_summary(as.data.frame(mtcars)))
```

## 4. mtcars Data Columns Statistical Analysis with apply Function

```{r results='asis', echo=FALSE}

library(knitr)

custom_summary <- function(input_data) {
    
    mean_ <- mean(input_data)
    median_ <- median(input_data)
    std_ <- sd(input_data)
    min_ <- min(input_data)
    max_ <- max(input_data)
    
    result <- c(mean=mean_, median=median_, std=std_, min=min_, max=max_)
    
    return(result)
}

cat("<p>mtcars dataset statistics are examined by using apply function and the results are given on the following table. Columns are taken from the original dataset and rows are the statistics.</p>")

stats <- apply(as.data.frame(mtcars), 2, custom_summary)

kable(stats)
```

## 5. na_example Data Analysis

```{r results='asis', echo=FALSE}

library(dslabs)

data(na_example)

na_data <- as.data.frame(na_example)

colnames(na_data) <- "Value"

cat("<h3> Dataset </h3>", "\n", na_data$Value)

cat("<h3> Number of NA Values </h3>", "\n", length(na_data[na_data == "NA"]))

no_na_data <- data.frame(na_data)

no_na_data[is.na(no_na_data)] <- 660

cat("<h3> Dataset Without NA Values </h3>", "\n", no_na_data$Value)

cat("<h3> The number of NA and 660 Values After the Modification </h3>", "\n", "<i>Total Number of NA is </i>", length(no_na_data[is.na(no_na_data)]), "\n", "<br> <i>Total Number of 660 is </i>", length(na_data[na_data == 660]))
```
